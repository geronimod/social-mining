# encoding: utf-8
require "bundler/setup"
require 'sinatra'
require 'json'
require './seeder'
require 'mormon'
require 'haml'

if development?
  require 'benchmark'
  require "sinatra/reloader"
  require 'debugger'
end

before do
  Mormon::OSM::Loader.cache_dir = "public/mormon/cache"
  @osm_file   = "public/osm/tandil.osm"
  @osm_loader = Mormon::OSM::Loader.new @osm_file, :cache => true
  @osm_router = Mormon::OSM::Router.new @osm_loader#, :algorithm => :random, :breadth => 1
end

get '/' do
  @bootstrap = {}
  @bootstrap[:test] = !!params[:test]
  haml :index, :format => :html5
end

# json array of routing 
get '/routes.?:format?' do
  # TODO read from db the routing nodes
  content_type :json
  
  routes      = []
  random_data = []
  threads     = []
  
  seeder = Seeder.new @osm_file
  random_data = seeder.randomize(params[:limit] && params[:limit].to_i || 100)
  
  random_data.each do |data|
    # threads << Thread.new do
      response, route = @osm_router.find_route data[:origin], data[:destiny], data[:transport]
      if response != "success"
        p "Route Failed: #{response} #{data[:origin]} #{data[:destiny]} #{data[:transport]}"
      else
        data[:route] = route
      end
    # end
  end

  # if development?
  #   puts Benchmark.measure { threads.map &:join }
  # else
  #   threads.map &:join
  # end
  random_data.to_json
end

get '/route/:from/:to/by/:transport.?:format?' do
  content_type :json

  response, route = @osm_router.find_route params[:from], params[:to], params[:transport]
  if response != "success"
    p "Route Failed: #{response} #{params[:from]} #{params[:to]} #{params[:transport]}"
  else
    route.to_json
  end
end

get '/routing_test' do
  # r1 = [[-37.3142275, -59.0830285], [-37.3151501, -59.0841563], [-37.3142643, -59.0852885], [-37.3152386, -59.0864564], [-37.3161892, -59.0876215], [-37.3171353, -59.0887811], [-37.3180472, -59.0898988], [-37.3189803, -59.0910426], [-37.3198985, -59.092168], [-37.3207873, -59.0932574], [-37.3226788, -59.0955759], [-37.3242572, -59.0975017], [-37.3243424, -59.0976675], [-37.323442, -59.0988349], [-37.3225376, -59.0999829], [-37.3206991, -59.1023169], [-37.3227156, -59.1048155], [-37.3254897, -59.1082538], [-37.3245727, -59.1094046], [-37.3255247, -59.1105327], [-37.326418, -59.1116704], [-37.3255285, -59.1128507], [-37.3264332, -59.1139657], [-37.3267904, -59.1143659], [-37.3268637, -59.1145504], [-37.3274405, -59.1160811], [-37.3279919, -59.1175444], [-37.328553, -59.1190338], [-37.3291042, -59.1204966], [-37.3296589, -59.1219686], [-37.3302062, -59.1234209], [-37.3307558, -59.1248844], [-37.3313533, -59.1264299], [-37.3316524, -59.1272414], [-37.3319411, -59.128025], [-37.3321667, -59.1286238], [-37.3324914, -59.1294855], [-37.333025, -59.130902], [-37.3335947, -59.1324138], [-37.3336223, -59.1324875], [-37.3340967, -59.1337523], [-37.3345178, -59.1348636], [-37.3350704, -59.1363298], [-37.3356186, -59.1378197], [-37.3361801, -59.1392757], [-37.3367214, -59.1407121], [-37.3372935, -59.1422308], [-37.3378509, -59.1437102], [-37.3383893, -59.1451829], [-37.3386736, -59.1458936], [-37.3389525, -59.1466339], [-37.3391355, -59.1471197], [-37.3394239, -59.1478852], [-37.3395031, -59.1480955], [-37.3395921, -59.1483319], [-37.3398904, -59.1491234], [-37.3400513, -59.1495506], [-37.3400754, -59.149608], [-37.3403495, -59.1502603], [-37.3405521, -59.1507487], [-37.3406783, -59.1510043], [-37.3409456, -59.1514225], [-37.3436851, -59.1552704], [-37.343783, -59.1555053], [-37.3446892, -59.1593527], [-37.3447479, -59.1597032], [-37.3447408, -59.1598762], [-37.3447589, -59.1598407], [-37.3447921, -59.1598061], [-37.3448328, -59.1597879], [-37.3448662, -59.1597865], [-37.3449077, -59.1598013], [-37.3449427, -59.1598331], [-37.344967, -59.159878], [-37.3449771, -59.1599487], [-37.3450464, -59.1598159], [-37.3451274, -59.1596657], [-37.3463294, -59.1581317], [-37.3471913, -59.1570318], [-37.3488374, -59.1549067]]
  r2 = [[-37.3142275, -59.0830285], [-37.3151501, -59.0841563], [-37.3142643, -59.0852885], [-37.3152386, -59.0864564], [-37.3161892, -59.0876215], [-37.3171353, -59.0887811], [-37.3180472, -59.0898988], [-37.3189803, -59.0910426], [-37.3198985, -59.092168], [-37.3207873, -59.0932574], [-37.3226788, -59.0955759], [-37.3242572, -59.0975017], [-37.3243424, -59.0976675], [-37.323442, -59.0988349], [-37.3225376, -59.0999829], [-37.3206991, -59.1023169], [-37.3209559, -59.1026344], [-37.3217917, -59.1036704], [-37.3227156, -59.1048155], [-37.3229476, -59.105103], [-37.3236365, -59.1059569], [-37.3240712, -59.1064957], [-37.3241506, -59.1065941], [-37.3245626, -59.1071047], [-37.3254897, -59.1082538], [-37.3245727, -59.1094046], [-37.3255247, -59.1105327], [-37.326418, -59.1116704], [-37.3273625, -59.1128198], [-37.3275539, -59.1130223], [-37.3280475, -59.1137913], [-37.3286471, -59.1153662], [-37.3292019, -59.1168282], [-37.329767, -59.1183178], [-37.3303212, -59.1197783], [-37.3308787, -59.1212476], [-37.3314293, -59.1226985], [-37.3315134, -59.1229896], [-37.3310612, -59.1246848], [-37.3308231, -59.1248443], [-37.3314084, -59.1263971], [-37.331713, -59.1272053], [-37.3320021, -59.1279593], [-37.3322328, -59.1285845], [-37.3325576, -59.1294461], [-37.3330914, -59.1308625], [-37.3336612, -59.1323742], [-37.3336889, -59.1324478], [-37.3341652, -59.1337115], [-37.3345846, -59.1348243], [-37.3351433, -59.1362902], [-37.3356964, -59.1377743], [-37.3362456, -59.1392315], [-37.3367874, -59.140669], [-37.3373524, -59.1421952], [-37.3379163, -59.1436706], [-37.3384746, -59.1451313], [-37.3387487, -59.1458482], [-37.3390308, -59.1465865], [-37.339216, -59.147071], [-37.3395078, -59.1478345], [-37.339588, -59.1480442], [-37.3396781, -59.1482799], [-37.3399798, -59.1490693], [-37.340143, -59.1494962], [-37.3400754, -59.149608], [-37.3403495, -59.1502603], [-37.3405521, -59.1507487], [-37.3406783, -59.1510043], [-37.3409456, -59.1514225], [-37.3436851, -59.1552704], [-37.343783, -59.1555053], [-37.3446892, -59.1593527], [-37.3447479, -59.1597032], [-37.3447408, -59.1598762], [-37.3447589, -59.1598407], [-37.3447921, -59.1598061], [-37.3448328, -59.1597879], [-37.3448662, -59.1597865], [-37.3449077, -59.1598013], [-37.3449427, -59.1598331], [-37.344967, -59.159878], [-37.3449771, -59.1599487], [-37.3450464, -59.1598159], [-37.3451274, -59.1596657], [-37.3463294, -59.1581317], [-37.3471913, -59.1570318], [-37.3488374, -59.1549067]]
  [{:route => r2}].to_json
end

